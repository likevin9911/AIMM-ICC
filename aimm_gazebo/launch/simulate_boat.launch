<?xml version="1.0"?>
<launch>
  <env name="ROSCONSOLE_CONFIG_FILE" value="$(find aimm_gazebo)/config/custom_rosconsole.conf"/>
  <arg name="world" default="$(find wave_gazebo)/worlds/ocean.world" /><!-- Gazebo world to load -->
  <arg name="gui" default="true" /><!-- If true, run gazebo GUI -->
  <arg name="verbose" default="false"/> <!-- If true, run gazebo in verbose mode -->
  <arg name="extra_gazebo_args" default=""/><!-- Set various other gazebo arguments-->
  <arg name="namespace" default="lpv"/><!-- Start in a default namespace -->
  <arg name="lpv_locked" default="false" /><!-- Do we lock the vessel to the world? -->
  <arg name="paused" default="false"/><!-- Start paused? -->
  <arg name="pinger_params" default="$(find aimm_gazebo)/config/pinger.yaml"/><!-- change this -->
  <arg name="recording" default="false"/>

  <!-- Initial USV location and attitude-->
  <arg name="x" default="0" />
  <arg name="y" default="0" />
  <arg name="z" default="0.1" />
  <arg name="P" default="0" />
  <arg name="R" default="0" />
  <arg name="Y" default="1" />
  <arg name="thrust_config" default="T" /> <!-- Choose Thruster-->
  <arg name="aimm_sensors_enabled" default="true" />

  <!-- Start Gazebo with the world file -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name"   value="$(arg world)"/>
    <arg name="verbose"      value="$(arg verbose)"/>
    <arg name="paused"       value="$(arg paused)"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui"          value="$(arg gui)" />
    <arg name="extra_gazebo_args" value="$(arg extra_gazebo_args)"/>
  </include>

 

  <!-- For now - can only use the T configuration! -->
  <arg name="urdf" default="$(find aimm)/urdf/boat_model_2.urdf.xacro"/>

  <param name="$(arg namespace)/robot_description"
         command="$(find xacro)/xacro --inorder '$(arg urdf)'
         namespace:=$(arg namespace) "/>

  <!-- Spawn model in Gazebo -->
  <node name="spawn_model" pkg="gazebo_ros" type="spawn_model"
        args="-x $(arg x) -y $(arg y) -z $(arg z)
              -R $(arg R) -P $(arg P) -Y $(arg Y)
              -urdf -param $(arg namespace)/robot_description -model lpv"/>
  

</launch>

